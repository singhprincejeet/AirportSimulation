/* the main class of Simulation for launching the simulation */public class Simulation {    // Configuration    final static int DESTINATIONS = 4;    final static int LANDING_PADS = 4;    final static int AEROPLANES = 6;    final static int PLANE_SIZE = 3;    final static int PASSENGERS = 20;    final static String[] destName = {"Toronto", "New York", "New Delhi", "Beijing"};    public static void main(String args[]){        int i;        Aeroplane[] sships = new Aeroplane[AEROPLANES];        Passenger[] passengers = new Passenger[PASSENGERS];        // create the airport        Airport sp = new Airport();        /* create aeroplanes and passengers*/        for (i=0; i<AEROPLANES; i++)            sships[i] = new Aeroplane(sp, i);        for (i=0; i<PASSENGERS; i++)            passengers[i] = new Passenger(sp, i);        /* now launch them */        for (i=0; i<AEROPLANES; i++)            sships[i].start();        for (i=0; i<PASSENGERS; i++)            passengers[i].start();        // let them enjoy for 20 seconds        try { Thread.sleep(20000);} catch (InterruptedException e) { }        /* now stop them */        // note how we are using deferred cancellation        for (i=0; i<AEROPLANES; i++) {            try {                sships[i].interrupt();            } catch (Exception e) {                e.printStackTrace();            }        }        for (i=0; i<PASSENGERS; i++) {            try {                passengers[i].interrupt();            } catch (Exception e) {                e.printStackTrace();            }        }        // Wait until everybody else is finished        for (i=0; i<AEROPLANES; i++) {            try {                sships[i].join();            } catch (Exception e) {                e.printStackTrace();            }        }        for (i=0; i<PASSENGERS; i++) {            try {                passengers[i].join();            } catch (Exception e) {                e.printStackTrace();            }        }        // This should be the last thing done by this program:        System.out.println("Simulation finished.");    }}